<?php

namespace App\Http\Requests\Lists;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Storage;
use Intervention\Image\Facades\Image;
use Illuminate\Support\Str;
class StoreRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize():bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules():array
    {
       return [
           'name' => 'required | max:25',
           'image' => 'nullable | image',
           'tags' => 'array | nullable',

       ];
    }


    public function validated():array
    {
        $data = parent::validated(); // TODO: Change the autogenerated stub

        if ($this->hasFile('image')) {

         $path = 'public/lists/' . $this->user()->id;

         $file = $this->file('image')->store($path);

         $thumbnail = Image::make(storage_path('app/'.$file))
                ->fit(150, 150)
                ->save(storage_path('app/'.$path.'/'.Str::random(10).'_thumbnail.jpg'));

         $data['image'] = basename($file);

         $data['preview_image'] = $thumbnail->basename;
        }
        $data['status'] = true;

        $data['user_id'] = $this->user()->id;

        return array_filter($data);
    }
}
